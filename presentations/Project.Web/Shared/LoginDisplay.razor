@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Blazored.LocalStorage
@using Project.Web.Models;
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage

<AuthorizeView>
    <Authorized>
        Hello, @user?.DisplayName!
        <button class="nav-link btn btn-link" @onclick="Logout">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    private UserModel? user;
    protected override async Task OnInitializedAsync()
    {
        user = await LocalStorage.GetItemAsync<UserModel>("userinfo");
    }
    private async Task Logout()
    {
        var authProvider = (CustomAuthStateProvider)authenticationStateProvider;
        await LocalStorage.RemoveItemAsync("authToken");
        await authProvider.LogoutAuthenticationStateAsync();
        Navigation.NavigateTo("/", true);
    }
}
