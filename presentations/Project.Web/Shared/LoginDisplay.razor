@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Blazored.LocalStorage
@using Project.Web.Models;
@using Project.Web.Components.Dropdown;
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage
<Dropdown>
    <DropdownButtonImage ClassNames="user-dropdown-image" ImageUrl="https://adminlte.io/themes/v3/dist/img/user2-160x160.jpg"></DropdownButtonImage>
    <DropdownItem>
        <li class="dropdown-option"><a class="dropdown-item-nav" href="#">Action</a></li>
        <li class="dropdown-option"><a class="dropdown-item-nav" href="#">Another action</a></li>
        <li class="dropdown-option"><a class="dropdown-item-nav" href="#">Something else here</a></li>
    </DropdownItem>
</Dropdown>
<AuthorizeView>
    <Authorized>

        Hello, @user?.DisplayName!
        <button class="nav-link btn btn-link" @onclick="Logout">Log out</button>
    </Authorized>
    <NotAuthorized>
        @*<a href="authentication/login">Log in</a>*@
    </NotAuthorized>
</AuthorizeView>

@code {
    private UserModel? user;
    protected override async Task OnInitializedAsync()
    {
        user = await LocalStorage.GetItemAsync<UserModel>("userinfo");
    }
    private async Task Logout()
    {
        var authProvider = (CustomAuthStateProvider)authenticationStateProvider;
        await LocalStorage.RemoveItemAsync("authToken");
        await authProvider.LogoutAuthenticationStateAsync();
        Navigation.NavigateTo("/", true);
    }
}
