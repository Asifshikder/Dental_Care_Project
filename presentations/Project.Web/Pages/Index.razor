@page "/"

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

<div class="alert alert-warning" role="alert">
    Before authentication will function correctly, you must configure your provider details in <code>Program.cs</code>
</div>

Welcome to your new app.


<div @*@attributes="@AdditionalAttributes"*@ id="Id" class="DirectionClassName">
    <button type="button" class="ButtonClassName" data-bs-toggle="DropdownToggle">ButtonText</button>
  @*  @if (ShowSplit)
    {
        <button type="button" class="@ClassName" data-bs-toggle="dropdown" disabled="@Disabled" aria-haspopup="true" aria-expanded="false"></button>
    }
    @if (!IsDisabled)
    {*@
        <div class="@*@MenuAlignmentClass*@">
          @*  @foreach (var item in GetItems())
            {
                if (ItemTemplate != null)
                {
                    @ItemTemplate.Invoke(item)
                }
                else if (item.IsDisabled)
                {*@
                    <div class="ActiveItem(item)">item.Text</div>
                    <div class="ActiveItem(item)">item.Text</div>
                    <div class="ActiveItem(item)">item.Text</div>
                    <div class="ActiveItem(item)">item.Text</div>
               @* }
                else
                {
                    <div class="@ActiveItem(item)" @onclick="e => OnItemClick(item)">@item.Text</div>
                }*@
            }
        </div>
    @*}*@
</div>


@code {
    private bool isActive = false;

    private void Show()
    {
        isActive = true;
    }

    private void Hide()
    {
        isActive = false;
    }

    private async Task LogOutAsync()
    {

    }
}