@page "/authentication/login"
@layout AuthLayout

@using Blazored.LocalStorage;
@using Project.Shared.Authentications;
@using Microsoft.AspNetCore.WebUtilities
@using Project.Web.Models;
@using Services.Authentications

@inject IAuthService authService
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
<PageTitle>Login</PageTitle>
<div class="row">
    <div class="col-sm-7 col-md-7 col-12 d-none d-sm-block">
    </div>
    <div class="col-sm-5 col-md-5 col-12">
        <div class="form-content">
            <div class="auth-form">
                <h2 class="title">Login</h2>
                <p class="details">Login to access your </p>
                <EditForm Model="user" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator />
                    <div class="mb-3">
                        <label for="userName" class="input-label">Email or phone</label>
                        <InputText id="userName" @bind-Value="user.Email" class="form-control" />
                        <ValidationMessage For="@(() => user.Email)" />
                    </div>
                    <div class="mb-3">
                        <label for="password" class="input-label">Password</label>
                        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
                        <ValidationMessage For="@(() => user.Password)" />
                    </div>
                    <div class="text-danger mb-2">
                        <span>@errorMessage</span>
                    </div>
                    <div class="d-flex justify-content-between">
                        <div class="d-flex">
                            <button type="submit" class="btn btn-login btn-rounded-20" disabled="@IsButtonDisabled">Login</button>
                            <div class="app-loader-xs @Loader_Visibility"></div>
                        </div>
                        <div class=""><a href="authentication/forgotpassword" class="text-forgotpass">Forgot password?</a></div>
                    </div>
                </EditForm>

            </div>

        </div>
    </div>
</div>



@code {
    private AuthenticationRequest user = new AuthenticationRequest();

    private string errorMessage = string.Empty;

    private string returnUrl = string.Empty;
    private bool IsButtonDisabled = false;
    private string Loader_Visibility = "d-none";
    protected override void OnInitialized()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("returnUrl", out var url))
        {
            returnUrl = url;
        }
    }

    private async Task HandleLogin()
    {
        IsButtonDisabled = true;
        Loader_Visibility = "d-block";
        var result = await authService.Login(user);

        if (result.Succeeded)
        {
            errorMessage = string.Empty;
            UserModel user = new UserModel()
                {
                    DisplayImage = result.Data.DisplayImage,
                    DisplayName = result.Data.DisplayName
                };
            await LocalStorage.SetItemAsync("userinfo", user);
            await LocalStorage.SetItemAsync("authToken", result.Data.JWToken);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
            NavigationManager.NavigateTo(returnUrl);
        }
        else
        {
            errorMessage = result.Message;
        }
        IsButtonDisabled = false;
        Loader_Visibility = "d-none";
    }
}

